#!/usr/bin/env raku

use lib '../lib';
use Text::Homoglyph::ASCII;

say "=== Pure ASCII Examples ===\n";

# Example 1: Force everything to ASCII
say "1. Complete ASCII conversion:";
my $text1 = 'caf√© üëã ‚Ç¨100 ‚Üínext‚Üê ‰∏≠Êñá';
say "   Original:         $text1";
say "   clean-ascii:      " ~ clean-ascii($text1);
say "   clean-ascii-more: " ~ clean-ascii-more($text1);
say "   clean-ascii-pure: " ~ clean-ascii-pure($text1);
say "";

# Example 2: Safe filenames
say "2. Filename sanitization:";
my @filenames = (
    'My R√©sum√© (2024).pdf',
    '–û—Ç—á—ë—Ç ‚Ññ123.xlsx',
    'Budget ‚Ç¨2024 ‚Üí Final.doc',
    'ÂÜôÁúü„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥.jpg',
    'Meeting Notes üìù.txt',
);

for @filenames -> $filename {
    my $safe = clean-ascii-pure($filename);
    say "   $filename";
    say "   ‚Üí $safe";
}
say "";

# Example 3: URL slug generation
say "3. URL-safe slugs:";
my @titles = (
    'Caf√© Reviews: Best Espresso in Par√≠s',
    '–¢–µ–æ—Ä–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
    '2024Âπ¥„ÅÆÊù±‰∫¨„Ç™„É™„É≥„Éî„ÉÉ„ÇØ',
    'Na√Øve Bayes Algorithm Explained',
);

for @titles -> $title {
    my $slug = clean-ascii-pure($title).lc.subst(/<-[a..z0..9]>+/, '-', :g).subst(/^'-'|'-'$/, '', :g);
    say "   $title";
    say "   ‚Üí $slug";
}
say "";

# Example 4: Comparison of all cleaning methods
say "4. Method comparison:";
my $complex = 'Ôº®√©llo‚Ñ¢ caf√© ‰∏≠Êñá üëç na√Øve r√©sum√©';
say "   Original:         $complex";
say "   clean-ascii:      " ~ clean-ascii($complex);
say "   clean-ascii-more: " ~ clean-ascii-more($complex);
say "   clean-ascii-pure: " ~ clean-ascii-pure($complex);